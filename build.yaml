targets:
  $default:
    builders:
      gql_build|ast_builder:
        enabled: true
      gql_build|req_builder:
        enabled: true
        options:
          schema: yonomi_platform_sdk|lib/third_party/yonomi_graphql_schema/schema.docs.graphql
      gql_build|serializer_builder:
        enabled: true
        options:
          schema: yonomi_platform_sdk|lib/third_party/yonomi_graphql_schema/schema.docs.graphql
      gql_build|schema_builder:
        enabled: true
      gql_build|data_builder:
        enabled: true
        options:
          schema: yonomi_platform_sdk|lib/third_party/yonomi_graphql_schema/schema.docs.graphql
      gql_build|var_builder:
        enabled: true
        options:
          schema: yonomi_platform_sdk|lib/third_party/yonomi_graphql_schema/schema.docs.graphql



# targets:
#   $default:
#     sources:
#       - lib/**
#       - queries/**
#       - yp.schema.graphql
#     builders:
#       artemis:
#         options:
#           fragments_glob: queries/fragments/**.fragment.graphql
#           scalar_mapping:
#             - graphql_type: DateTime
#               dart_type: DateTime
#             - graphql_type: PartialDateTime
#               dart_type: DateTime
#             - graphql_type: RRuleSchedule
#               dart_type: DateTime
#             - graphql_type: JSON
#               dart_type: Map<String, dynamic>
#             - graphql_type: JSONObject
#               dart_type: Map<String, dynamic>            
#           schema_mapping:
#             - schema: yp.schema.graphql
#               queries_glob: queries/user/user.query.graphql
#               output: lib/graphql/user/user_query.dart
#             - schema: yp.schema.graphql
#               queries_glob: queries/accounts/**.graphql
#               output: lib/graphql/accounts/account_queries.dart
#             - schema: yp.schema.graphql
#               queries_glob: queries/get_devices.graphql
#               output: lib/graphql/devices/devices_query.dart
#             - schema: yp.schema.graphql
#               queries_glob: queries/get_device.graphql
#               output: lib/graphql/devices/device_query.dart
#             - schema: yp.schema.graphql
#               queries_glob: queries/devices/lock/**.graphql
#               output: lib/graphql/devices/lock/lock_queries.dart
#             - schema: yp.schema.graphql
#               queries_glob: queries/devices/thermostat/**.graphql
#               output: lib/graphql/devices/thermostat/thermostat_queries.dart
